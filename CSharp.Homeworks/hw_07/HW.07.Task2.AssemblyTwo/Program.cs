using HW._07.Task2.AssemblyOne;

Motorcycle MyMotor = new();

string color = MyMotor.color;

/*
ushort MaxSpeed = MyMotor.MaxSpeed; ==> Является публичной константой, может быть вызван только из самого класса в любой сборке. Например Motorcycle.MaxSpeed;

ushort maxTankVolume = MyMotor.maxTankVolume; ==> Является переменной с модификатором protected и доступна только для наследника 
                                                  в разных сборках, но не для его экземпляров и экземпляра наследника. Так же доступна внутри класса где определена.

ushort maxWeight = MyMotor.maxWeight; ==> Совмещает два модификатора доступа. Такой компонент класса доступен из любого места в текущей сборке и из производных классов,
                                          которые могут располагаться в других сборках. В данном случае был создан экземпляр класса из другой сборки, а в таком случае доступа нет.

string description = MyMotor.description; ==> Является переменной с модификаторо private, доступна только внутри самого класса в которой определена;

bool gasolineEngine = MyMotor.gasolineEngine; ==> Переменная с модификатором internal из другой сборки и доступна только в её пределах.

MyMotor.StartMotorcycle(); ==> Метод является методом с модификатором protected и доступен только 
                               для наследника в разных сборках и внутри класса где сам метод определён.

MyMotor.Drive(); ==> Метод является приватным доступен только внутри самого класса, недоступен для экземпляра и потомков.

MyMotor.Brake(); ==> Метод с модификатором protected internal. Такой компонент класса доступен из любого места в текущей сборке и из производных классов,
                     которые могут располагаться в других сборках. В данном случае был создан экземпляр класса из другой сборки, а в таком случае доступа нет.

MyMotor.StopMotorcycle(); ==> Метод доступен только для наследников класса и в текущей сборке. 

SportBike MySportBike = (); ==> Невозможно создать экземпляр класса, по скольку класс имеет модификатор доступа internal и доступен лишь в пределах своей сборки.
*/